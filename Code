#include <MIDI.h>                //Δηλώνουμε οτι θα χρησιμοποιήσουμε τη βιβλιοθήκη έτοιμου κώδικα Midi.h
#include "Adafruit_MPR121.h"     //Δηλώνουμε οτι θα χρησιμοποιήσουμε τη βιβλιοθήκη έτοιμου κώδικα Adafruit_MPR121.h
#include <Wire.h>                //Δηλώνουμε οτι θα χρησιμοποιήσουμε τη βιβλιοθήκη έτοιμου κώδικα Wire.h
MIDI_CREATE_DEFAULT_INSTANCE();  //Εντολή για τη συμβατότητα των MIDI εντολών : sendNoteOn και sendNoteOff με τη βιβλιοθήκη έτοιμου κώδικα MIDI

#ifndef _BV                      //Macro εντολές για τη μεταγλώττιση των Bit που διαβάζουν τα Pins
#define _BV(bit) (1 << (bit))
#endif

int notes[] = {48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59};   //Οι νότες Midi που αντιστοιχούν σε κάθε πλήκτρο του αισθητήρα

int touch = 0;                             //Δηλώνουμε τη μεταβλητή touch για την κατάσταση του κάθε πλήκτρου (αν πατήθηκε δλδ.)
int prevtouch = 0;                         //Δηλώνουμε τη μεταβλητή prevtouch για να κρατάμε την πρηγούμενη κατάσταση του κάθε πλήκτρου

Adafruit_MPR121 cap = Adafruit_MPR121();   //Με αυτή τη λειτοουργία που ονομάσαμε cap διαβάζουμε την κατάσταση των αισθητήρων απο όλα τα pins

void setup() {
  Serial.begin(115200);                    //Ξεκινάμε τη σειριακή επικοινωνία του Arduino με τον υπολογιστή
  cap.begin(0x5A);                         //Ξεκινάμε τη λειτουργία cap για να διαβάσουμε την κατάσταση των πλήκτρων
}

void loop() {
  touch = cap.touched();                                //Διαβάζουμε την κατάσταση των πλήκτρων
  const byte MIDI_CHANNEL = 1;                          //Δηλώνουμε οτι στέλνουμε τα δεδομένα Midi στο κανάλι Midi 1
  for (uint8_t i = 0; i < 12; i++) {                    //Για κάθε ένα απο τα 12 πλήκτρα
    if ((touch & _BV(i)) && !(prevtouch & _BV(i)) ) {   //Ελέγχουμε την κατάστασή του και τη συγκρίνουμε με την προηγούμενη
      MIDI.sendNoteOn(notes[i], 127, MIDI_CHANNEL);     //και στείλουμε το μύνημα Midi με τον αριθμό του πλήκτρου , την τιμή 127 που σημαίνει οτι είναι πατημένο το πλήκτρο και το κανάλι Midi που στέλνουμε το μύνημα
    }
    if (!(touch & _BV(i)) && (prevtouch & _BV(i)) ) {   //Ελέγχουμε αν είναι ακόμα πατημένο το πλήκτρο συγκρίνοντας την κατάσταση του με την προηγούμενη και αν δεν είναι πατημένο
      MIDI.sendNoteOff(notes[i], 0, MIDI_CHANNEL);      //στέλνουμε το ίδιο μύνημα Midi με παραπάνω με τιμή 0 για το πλήτρο που σημαίνει οτι δεν είναι πατημένο
    }
  }
  prevtouch = touch;                                    //Δίνουμε την τιμή της κατάστασης του πλήκτρου στην προηγούμενη κατάσταση
}
